[1mdiff --git a/anonympy/pandas/core.py b/anonympy/pandas/core.py[m
[1mindex b27e565..3476a80 100644[m
[1m--- a/anonympy/pandas/core.py[m
[1m+++ b/anonympy/pandas/core.py[m
[36m@@ -165,14 +165,50 @@[m [mclass dfAnonymizer(object):[m
 [m
     def anonymize(self,[m
                   methods: Optional[Dict[str, str]] = None,[m
[32m+[m[32m                  locale: Optional[Union[str, List[str]]] = ['en_US'],[m
                   inplace: Optional[bool] = True):[m
         '''[m
[32m+[m[32m        Anonymize all possible columns using methods:[m
[32m+[m[32m            - Numeric Columns => Rounding[m[41m [m
[32m+[m[32m            - Categorical Columns => Synthetic data, Resampling & Tokenazation[m
[32m+[m[32m            - Datetime columsn => Synthetic dates & Noise[m
[32m+[m
[32m+[m[32m        Parameters[m
[32m+[m[32m        ----------[m
[32m+[m[32m        methods : Optional[Dict[str, str]], default None[m
[32m+[m[32m        locale : str or List[str], default ['en_US'][m
[32m+[m[32m        inplace : Optional[bool], default True[m
 [m
[32m+[m[32m        Returns[m
[32m+[m[32m        ----------[m
[32m+[m[32m            ser : if inplace = False, anonymized pandas Series or pandas DataFrame will be returned,[m
[32m+[m[32m                  otherwise None[m
         '''[m
         [m
         if methods == None:[m
[31m-            pass[m
[32m+[m[32m            if inplace:[m
[32m+[m[32m                self._fake_data_auto(locale = locale, inplace = inplace)   # anonymize using fake data if any column's name is similar to Faker's method (print(fake_methods) for all available methods)[m
[32m+[m[41m            [m
[32m+[m[32m                for column in self.unanonymized_columns:[m
[32m+[m
[32m+[m[32m                    if column in self._numeric_columns:[m
[32m+[m[32m                        try:[m
[32m+[m[32m                            self.numeric_rounding(column)[m
[32m+[m[32m                        except:[m
[32m+[m[32m                            pass[m
[32m+[m[41m                                            [m
[32m+[m[32m                    if column in self._categorical_columns:[m
[32m+[m[32m                        ...[m
[32m+[m[41m                        [m
[32m+[m[32m                    if column in self._datetime_columns:[m
[32m+[m[41m                        [m
[32m+[m[41m                    [m
[32m+[m
[32m+[m[32m            else:[m
[32m+[m[32m                temp = self._fake_data_auto(locale = locale, inplace = inplace)[m
 [m
[32m+[m[41m            [m
[32m+[m[41m            [m
 [m
 [m
     def _fake_column(self,[m
[36m@@ -353,8 +389,8 @@[m [mclass dfAnonymizer(object):[m
         ----------[m
             columns : Union[str, List[str]][m
             frequency : Union[str, Tuple[str, ...]] , default  ("YEAR", "MONTH", "DAY")[m
[31m-            min : Union[int, Tuple[int, ...]], default (-10, -5, -5)[m
[31m-            max : Union[int, Tuple[int, ...]], default (10, 5, 5)[m
[32m+[m[32m            MIN : Union[int, Tuple[int, ...]], default (-10, -5, -5)[m
[32m+[m[32m            MAX : Union[int, Tuple[int, ...]], default (10, 5, 5)[m
             seed : int, default None[m
             inplace : bool, default True[m
 [m
